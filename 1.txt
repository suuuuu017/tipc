DEBUG: initial interval range state for function define i64 @_tip_main() {
entry:
  %subtmp = sub i64 42, 20
  %gttmp = icmp sgt i64 %subtmp, 42
  %ifcond = icmp ne i1 %gttmp, false
  br i1 %ifcond, label %then1, label %else1

then1:                                            ; preds = %entry
  br label %ifmerge1

else1:                                            ; preds = %entry
  br label %ifmerge1

ifmerge1:                                         ; preds = %else1, %then1
  %z.0 = phi i64 [ 42, %then1 ], [ %subtmp, %else1 ]
  call void @llvm.donothing()
  %divtmp = sdiv i64 %z.0, 2
  %multmp = mul i64 %divtmp, 3
  %addtmp = add i64 %z.0, %divtmp
  %addtmp11 = add i64 %addtmp, %multmp
  ret i64 %addtmp11
}

-->  %divtmp = sdiv i64 %z.0, 2 = [+inf,-inf]
-->  %multmp = mul i64 %divtmp, 3 = [+inf,-inf]
-->  %subtmp = sub i64 42, 20 = [+inf,-inf]
-->  %z.0 = phi i64 [ 42, %then1 ], [ %subtmp, %else1 ] = [+inf,-inf]
-->  %addtmp = add i64 %z.0, %divtmp = [+inf,-inf]
-->  %gttmp = icmp sgt i64 %subtmp, 42 = [+inf,-inf]
-->  %addtmp11 = add i64 %addtmp, %multmp = [+inf,-inf]
-->  %ifcond = icmp ne i1 %gttmp, false = [+inf,-inf]
-->  call void @llvm.donothing() = [+inf,-inf]
DEBUG: initial worklist
-->42
-->20
-->42
-->0
-->42
-->2
-->3
-2147483648 0 2 3 20 42 2147483647 DEBUG: analyzing   %subtmp = sub i64 42, 20
--> old value = [+inf,-inf]
--> new value  =22 22
DEBUG: analyzing   %gttmp = icmp sgt i64 %subtmp, 42
--> old value = [+inf,-inf]
--> new value  =0 1
DEBUG: analyzing   %ifcond = icmp ne i1 %gttmp, false
--> old value = [+inf,-inf]
--> new value  =0 1
DEBUG: merging values at node 0x60000048a0d8
--> phi[0] with lub([+inf,-inf], [42,42]) = [42,42]
--> phi[1] with lub([42,42], [20,42]) = [20,42]
DEBUG: analyzing   %z.0 = phi i64 [ 42, %then1 ], [ %subtmp, %else1 ]
--> old value = [+inf,-inf]
--> new value  =20 42
DEBUG: analyzing   call void @llvm.donothing()
--> old value = [+inf,-inf]
--> new value  =-2147483648 2147483647
DEBUG: analyzing   %divtmp = sdiv i64 %z.0, 2
--> old value = [+inf,-inf]
--> new value  =10 21
low is 9
DEBUG: analyzing   %multmp = mul i64 %divtmp, 3
--> old value = [+inf,-inf]
--> new value  =9 126
DEBUG: analyzing   %addtmp = add i64 %z.0, %divtmp
--> old value = [+inf,-inf]
--> new value  =23 84
DEBUG: analyzing   %addtmp11 = add i64 %addtmp, %multmp
--> old value = [+inf,-inf]
--> new value  =23 2147483647
*** interval range analysis for function define i64 @_tip_main() {
entry:
  %subtmp = sub i64 42, 20
  %gttmp = icmp sgt i64 %subtmp, 42
  %ifcond = icmp ne i1 %gttmp, false
  br i1 %ifcond, label %then1, label %else1

then1:                                            ; preds = %entry
  br label %ifmerge1

else1:                                            ; preds = %entry
  br label %ifmerge1

ifmerge1:                                         ; preds = %else1, %then1
  %z.0 = phi i64 [ 42, %then1 ], [ %subtmp, %else1 ]
  call void @llvm.donothing()
  %divtmp = sdiv i64 %z.0, 2
  %multmp = mul i64 %divtmp, 3
  %addtmp = add i64 %z.0, %divtmp
  %addtmp11 = add i64 %addtmp, %multmp
  ret i64 %addtmp11
}
 ***
  %divtmp = sdiv i64 %z.0, 2 = [3,42]
  %multmp = mul i64 %divtmp, 3 = [3,+inf]
  %subtmp = sub i64 42, 20 = [20,42]
  %z.0 = phi i64 [ 42, %then1 ], [ %subtmp, %else1 ] = [20,42]
  %addtmp = add i64 %z.0, %divtmp = [20,+inf]
  %gttmp = icmp sgt i64 %subtmp, 42 = [0,2]
  %addtmp11 = add i64 %addtmp, %multmp = [20,+inf]
  %ifcond = icmp ne i1 %gttmp, false = [0,2]
  call void @llvm.donothing() = [-inf,+inf]
